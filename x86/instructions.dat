ADC—Add
14 ib                    |ADC AL, imm8
15 iw                    |ADC AX, imm16
15 id                    |ADC EAX, imm32
REX.W + 15 id            |ADC RAX, imm32
80 /2 ib                 |ADC r/m8, imm8
REX + 80 /2 ib           |ADC r/m8 , imm8
81 /2 iw                 |ADC r/m16, imm16
81 /2 id                 |ADC r/m32, imm32
REX.W + 81 /2 id         |ADC r/m64, imm32
83 /2 ib                 |ADC r/m16, imm8
83 /2 ib                 |ADC r/m32, imm8
REX.W + 83 /2 ib         |ADC r/m64, imm8
10 /r                    |ADC r/m8, r8
REX + 10 /r              |ADC r/m8 , r8
11 /r                    |ADC r/m16, r16
11 /r                    |ADC r/m32, r32
REX.W + 11 /r            |ADC r/m64, r64
12 /r                    |ADC r8, r/m8
REX + 12 /r              |ADC r8 , r/m8
13 /r                    |ADC r16, r/m16
13 /r                    |ADC r32, r/m32
REX.W + 13 /r            |ADC r64, r/m64
ADD—Add
04 ib                    |ADD AL, imm8
05 iw                    |ADD AX, imm16
05 id                    |ADD EAX, imm32
REX.W + 05 id            |ADD RAX, imm32
80 /0 ib                 |ADD r/m8, imm8
REX + 80 /0 ib           |ADD r/m8 , imm8
81 /0 iw                 |ADD r/m16, imm16
81 /0 id                 |ADD r/m32, imm32
REX.W + 81 /0 id         |ADD r/m64, imm32
83 /0 ib                 |ADD r/m16, imm8
83 /0 ib                 |ADD r/m32, imm8
REX.W + 83 /0 ib         |ADD r/m64, imm8
00 /r                    |ADD r/m8, r8
REX + 00 /r              |ADD r/m8 , r8
01 /r                    |ADD r/m16, r16
01 /r                    |ADD r/m32, r32
REX.W + 01 /r            |ADD r/m64, r64
02 /r                    |ADD r8, r/m8
REX + 02 /r              |ADD r8 , r/m8
03 /r                    |ADD r16, r/m16
03 /r                    |ADD r32, r/m32
REX.W + 03 /r            |ADD r64, r/m64
AND—Logical
24 ib                    |AND AL, imm8
25 iw                    |AND AX, imm16
25 id                    |AND EAX, imm32
REX.W + 25 id            |AND RAX, imm32
80 /4 ib                 |AND r/m8, imm8
REX + 80 /4 ib           |AND r/m8 , imm8
81 /4 iw                 |AND r/m16, imm16
81 /4 id                 |AND r/m32, imm32
REX.W + 81 /4 id         |AND r/m64, imm32
83 /4 ib                 |AND r/m16, imm8
83 /4 ib                 |AND r/m32, imm8
REX.W + 83 /4 ib         |AND r/m64, imm8
20 /r                    |AND r/m8, r8
REX + 20 /r              |AND r/m8 , r8
21 /r                    |AND r/m16, r16
21 /r                    |AND r/m32, r32
REX.W + 21 /r            |AND r/m64, r64
22 /r                    |AND r8, r/m8
REX + 22 /r              |AND r8 , r/m8
23 /r                    |AND r16, r/m16
23 /r                    |AND r32, r/m32
REX.W + 23 /r            |AND r64, r/m64
BSF—Bit
0F BC /r                 |BSF r16, r/m16
0F BC /r                 |BSF r32, r/m32
REX.W + 0F BC /r         |BSF r64, r/m64
BSR—Bit
0F BD /r                 |BSR r16, r/m16
0F BD /r                 |BSR r32, r/m32
REX.W + 0F BD /r         |BSR r64, r/m64
BSWAP—Byte
0F C8+rd                 |BSWAP r32
REX.W + 0F C8+rd         |BSWAP r64
BT—Bit
0F A3 /r                 |BT r/m16, r16
0F A3 /r                 |BT r/m32, r32
REX.W + 0F A3 /r         |BT r/m64, r64
0F BA /4 ib              |BT r/m16, imm8
0F BA /4 ib              |BT r/m32, imm8
REX.W + 0F BA /4 ib      |BT r/m64, imm8
BTC—Bit
0F BB /r                 |BTC r/m16, r16
0F BB /r                 |BTC r/m32, r32
REX.W + 0F BB /r         |BTC r/m64, r64
0F BA /7 ib              |BTC r/m16, imm8
0F BA /7 ib              |BTC r/m32, imm8
REX.W + 0F BA /7 ib      |BTC r/m64, imm8
BTR—Bit
0F B3 /r                 |BTR r/m16, r16
0F B3 /r                 |BTR r/m32, r32
REX.W + 0F B3 /r         |BTR r/m64, r64
0F BA /6 ib              |BTR r/m16, imm8
0F BA /6 ib              |BTR r/m32, imm8
REX.W + 0F BA /6 ib      |BTR r/m64, imm8
BTS—Bit
0F AB /r                 |BTS r/m16, r16
0F AB /r                 |BTS r/m32, r32
REX.W + 0F AB /r         |BTS r/m64, r64
0F BA /5 ib              |BTS r/m16, imm8
0F BA /5 ib              |BTS r/m32, imm8
REX.W + 0F BA /5 ib      |BTS r/m64, imm8
CALL—Call
E8 cd                    |CALL rel32
FF /2                    |CALL r/m64
FF /3                    |CALL m16:16
FF /3                    |CALL m16:32
REX.W FF /3              |CALL m16:64
CBW/CWDE/CDQE—Convert
98                       |CBW
98                       |CWDE
REX.W + 98               |CDQE
CLC—Clear
F8                       |CLC
CLD—Clear
FC                       |CLD
CLFLUSH—Flush
NP 0F AE /7              |CLFLUSH m8
CLFLUSHOPT—Flush
NFx 66 0F AE /7          |CLFLUSHOPT m8
CLI—Clear
FA                       |CLI
CLTS—Clear
0F 06                    |CLTS
CMC—Complement
F5                       |CMC
CMOVcc—Conditional
0F 47 /r                 |CMOVA r16, r/m16
0F 47 /r                 |CMOVA r32, r/m32
REX.W + 0F 47 /r         |CMOVA r64, r/m64
0F 43 /r                 |CMOVAE r16, r/m16
0F 43 /r                 |CMOVAE r32, r/m32
REX.W + 0F 43 /r         |CMOVAE r64, r/m64
0F 42 /r                 |CMOVB r16, r/m16
0F 42 /r                 |CMOVB r32, r/m32
REX.W + 0F 42 /r         |CMOVB r64, r/m64
0F 46 /r                 |CMOVBE r16, r/m16
0F 46 /r                 |CMOVBE r32, r/m32
REX.W + 0F 46 /r         |CMOVBE r64, r/m64
0F 42 /r                 |CMOVC r16, r/m16
0F 42 /r                 |CMOVC r32, r/m32
REX.W + 0F 42 /r         |CMOVC r64, r/m64
0F 44 /r                 |CMOVE r16, r/m16
0F 44 /r                 |CMOVE r32, r/m32
REX.W + 0F 44 /r         |CMOVE r64, r/m64
0F 4F /r                 |CMOVG r16, r/m16
0F 4F /r                 |CMOVG r32, r/m32
REX.W + 0F 4F /r         |CMOVG r64, r/m64
0F 4D /r                 |CMOVGE r16, r/m16
0F 4D /r                 |CMOVGE r32, r/m32
REX.W + 0F 4D /r         |CMOVGE r64, r/m64
0F 4C /r                 |CMOVL r16, r/m16
0F 4C /r                 |CMOVL r32, r/m32
REX.W + 0F 4C /r         |CMOVL r64, r/m64
0F 4E /r                 |CMOVLE r16, r/m16
0F 4E /r                 |CMOVLE r32, r/m32
REX.W + 0F 4E /r         |CMOVLE r64, r/m64
0F 46 /r                 |CMOVNA r16, r/m16
0F 46 /r                 |CMOVNA r32, r/m32
REX.W + 0F 46 /r         |CMOVNA r64, r/m64
0F 42 /r                 |CMOVNAE r16, r/m16
0F 42 /r                 |CMOVNAE r32, r/m32
REX.W + 0F 42 /r         |CMOVNAE r64, r/m64
0F 43 /r                 |CMOVNB r16, r/m16
0F 43 /r                 |CMOVNB r32, r/m32
REX.W + 0F 43 /r         |CMOVNB r64, r/m64
0F 47 /r                 |CMOVNBE r16, r/m16
CMOVcc—Conditional
0F 47 /r                 |CMOVNBE r32, r/m32
REX.W + 0F 47 /r         |CMOVNBE r64, r/m64
0F 43 /r                 |CMOVNC r16, r/m16
0F 43 /r                 |CMOVNC r32, r/m32
REX.W + 0F 43 /r         |CMOVNC r64, r/m64
0F 45 /r                 |CMOVNE r16, r/m16
0F 45 /r                 |CMOVNE r32, r/m32
REX.W + 0F 45 /r         |CMOVNE r64, r/m64
0F 4E /r                 |CMOVNG r16, r/m16
0F 4E /r                 |CMOVNG r32, r/m32
REX.W + 0F 4E /r         |CMOVNG r64, r/m64
0F 4C /r                 |CMOVNGE r16, r/m16
0F 4C /r                 |CMOVNGE r32, r/m32
REX.W + 0F 4C /r         |CMOVNGE r64, r/m64
0F 4D /r                 |CMOVNL r16, r/m16
0F 4D /r                 |CMOVNL r32, r/m32
REX.W + 0F 4D /r         |CMOVNL r64, r/m64
0F 4F /r                 |CMOVNLE r16, r/m16
0F 4F /r                 |CMOVNLE r32, r/m32
REX.W + 0F 4F /r         |CMOVNLE r64, r/m64
0F 41 /r                 |CMOVNO r16, r/m16
0F 41 /r                 |CMOVNO r32, r/m32
REX.W + 0F 41 /r         |CMOVNO r64, r/m64
0F 4B /r                 |CMOVNP r16, r/m16
0F 4B /r                 |CMOVNP r32, r/m32
REX.W + 0F 4B /r         |CMOVNP r64, r/m64
0F 49 /r                 |CMOVNS r16, r/m16
0F 49 /r                 |CMOVNS r32, r/m32
REX.W + 0F 49 /r         |CMOVNS r64, r/m64
0F 45 /r                 |CMOVNZ r16, r/m16
0F 45 /r                 |CMOVNZ r32, r/m32
REX.W + 0F 45 /r         |CMOVNZ r64, r/m64
0F 40 /r                 |CMOVO r16, r/m16
0F 40 /r                 |CMOVO r32, r/m32
REX.W + 0F 40 /r         |CMOVO r64, r/m64
0F 4A /r                 |CMOVP r16, r/m16
0F 4A /r                 |CMOVP r32, r/m32
REX.W + 0F 4A /r         |CMOVP r64, r/m64
0F 4A /r                 |CMOVPE r16, r/m16
0F 4A /r                 |CMOVPE r32, r/m32
REX.W + 0F 4A /r         |CMOVPE r64, r/m64
CMOVcc—Conditional
0F 4B /r                 |CMOVPO r16, r/m16
0F 4B /r                 |CMOVPO r32, r/m32
REX.W + 0F 4B /r         |CMOVPO r64, r/m64
0F 48 /r                 |CMOVS r16, r/m16
0F 48 /r                 |CMOVS r32, r/m32
REX.W + 0F 48 /r         |CMOVS r64, r/m64
0F 44 /r                 |CMOVZ r16, r/m16
0F 44 /r                 |CMOVZ r32, r/m32
REX.W + 0F 44 /r         |CMOVZ r64, r/m64
CMP—Compare
3C ib                    |CMP AL, imm8
3D iw                    |CMP AX, imm16
3D id                    |CMP EAX, imm32
REX.W + 3D id            |CMP RAX, imm32
80 /7 ib                 |CMP r/m8, imm8
REX + 80 /7 ib           |CMP r/m8 , imm8
81 /7 iw                 |CMP r/m16, imm16
81 /7 id                 |CMP r/m32, imm32
REX.W + 81 /7 id         |CMP r/m64, imm32
83 /7 ib                 |CMP r/m16, imm8
83 /7 ib                 |CMP r/m32, imm8
REX.W + 83 /7 ib         |CMP r/m64, imm8
38 /r                    |CMP r/m8, r8
REX + 38 /r              |CMP r/m8 , r8
39 /r                    |CMP r/m16, r16
39 /r                    |CMP r/m32, r32
REX.W + 39 /r            |CMP r/m64,r64
3A /r                    |CMP r8, r/m8
REX + 3A /r              |CMP r8 , r/m8
3B /r                    |CMP r16, r/m16
3B /r                    |CMP r32, r/m32
REX.W + 3B /r            |CMP r64, r/m64
CMPS/CMPSB/CMPSW/CMPSD/CMPSQ—Compare
A6                       |CMPS m8, m8
A7                       |CMPS m16, m16
A7                       |CMPS m32, m32
REX.W + A7               |CMPS m64, m64
A6                       |CMPSB
A7                       |CMPSW
A7                       |CMPSD
REX.W + A7               |CMPSQ
CMPXCHG—Compare
0F B0/r                  |CMPXCHG r/m8, r8
REX + 0F B0/r            |CMPXCHG r/m8,r8
0F B1/r                  |CMPXCHG r/m16, r16
0F B1/r                  |CMPXCHG r/m32, r32
REX.W + 0F B1/r          |CMPXCHG r/m64, r64
CMPXCHG8B/CMPXCHG16B—Compare
0F C7 /1                 |CMPXCHG8B m64
REX.W + 0F C7 /1         |CMPXCHG16B m128
CPUID—CPU
0F A2                    |CPUID
CRC32—Accumulate
F2 0F 38 F0 /r           |CRC32 r32, r/m8
F2 REX 0F 38 F0 /r       |CRC32 r32, r/m8
F2 0F 38 F1 /r           |CRC32 r32, r/m16
F2 0F 38 F1 /r           |CRC32 r32, r/m32
F2 REX.W 0F 38 F0 /r     |CRC32 r64, r/m8
F2 REX.W 0F 38 F1 /r     |CRC32 r64, r/m64
CVTPI2PD—Convert
66 0F 2A /r              |CVTPI2PD xmm, mm/m64
CVTPI2PS—Convert
NP 0F 2A /r              |CVTPI2PS xmm, mm/m64
CVTPS2PI—Convert
NP 0F 2D /r              |CVTPS2PI mm, xmm/m64
CVTTPD2PI—Convert
66 0F 2C /r              |CVTTPD2PI mm, xmm/m128
CVTTPS2PI—Convert
NP 0F 2C /r              |CVTTPS2PI mm, xmm/m64
CWD/CDQ/CQO—Convert
99                       |CWD
99                       |CDQ
REX.W + 99               |CQO
DEC—Decrement
FE /1                    |DEC r/m8
REX + FE /1              |DEC r/m8
FF /1                    |DEC r/m16
FF /1                    |DEC r/m32
REX.W + FF /1            |DEC r/m64
DIV—Unsigned
F6 /6                    |DIV r/m8
REX + F6 /6              |DIV r/m8
F7 /6                    |DIV r/m16
F7 /6                    |DIV r/m32
REX.W + F7 /6            |DIV r/m64
EMMS—Empty
NP 0F 77                 |EMMS
ENTER—Make
C8 iw 00                 |ENTER imm16, 0
C8 iw 01                 |ENTER imm16,1
C8 iw ib                 |ENTER imm16, imm8
F2XM1—Compute
D9 F0                    |F2XM1
FABS—Absolute
D9 E1                    |FABS
FADD/FADDP/FIADD—Add
D8 /0                    |FADD m32fp
DC /0                    |FADD m64fp
D8 C0+i                  |FADD ST(0), ST(i)
DC C0+i                  |FADD ST(i), ST(0)
DE C0+i                  |FADDP ST(i), ST(0)
DE C1                    |FADDP
DA /0                    |FIADD m32int
DE /0                    |FIADD m16int
FBLD—Load
DF /4                    |FBLD m80bcd
FBSTP—Store
DF /6                    |FBSTP m80bcd
FCHS—Change
D9 E0                    |FCHS
FCLEX/FNCLEX—Clear
9B DB E2                 |FCLEX
DB E2                    |FNCLEX1
FCMOVcc—Floating-Point
DA C0+i                  |FCMOVB ST(0), ST(i)
DA C8+i                  |FCMOVE ST(0), ST(i)
DA D0+i                  |FCMOVBE ST(0), ST(i)
DA D8+i                  |FCMOVU ST(0), ST(i)
DB C0+i                  |FCMOVNB ST(0), ST(i)
DB C8+i                  |FCMOVNE ST(0), ST(i)
DB D0+i                  |FCMOVNBE ST(0), ST(i)
DB D8+i                  |FCMOVNU ST(0), ST(i)
FCOM/FCOMP/FCOMPP—Compare
D8 /2                    |FCOM m32fp
DC /2                    |FCOM m64fp
D8 D0+i                  |FCOM ST(i)
D8 D1                    |FCOM
D8 /3                    |FCOMP m32fp
DC /3                    |FCOMP m64fp
D8 D8+i                  |FCOMP ST(i)
D8 D9                    |FCOMP
DE D9                    |FCOMPP
FCOS—Cosine
D9 FF                    |FCOS
FDECSTP—Decrement
D9 F6                    |FDECSTP
FDIV/FDIVP/FIDIV—Divide
D8 /6                    |FDIV m32fp
DC /6                    |FDIV m64fp
D8 F0+i                  |FDIV ST(0), ST(i)
DC F8+i                  |FDIV ST(i), ST(0)
DE F8+i                  |FDIVP ST(i), ST(0)
DE F9                    |FDIVP
DA /6                    |FIDIV m32int
DE /6                    |FIDIV m16int
FDIVR/FDIVRP/FIDIVR—Reverse
D8 /7                    |FDIVR m32fp
DC /7                    |FDIVR m64fp
D8 F8+i                  |FDIVR ST(0), ST(i)
DC F0+i                  |FDIVR ST(i), ST(0)
DE F0+i                  |FDIVRP ST(i), ST(0)
DE F1                    |FDIVRP
DA /7                    |FIDIVR m32int
DE /7                    |FIDIVR m16int
FFREE—Free
DD C0+i                  |FFREE ST(i)
FICOM/FICOMP—Compare
DE /2                    |FICOM m16int
DA /2                    |FICOM m32int
DE /3                    |FICOMP m16int
DA /3                    |FICOMP m32int
FILD—Load
DF /0                    |FILD m16int
DB /0                    |FILD m32int
DF /5                    |FILD m64int
FINCSTP—Increment
D9 F7                    |FINCSTP
FINIT/FNINIT—Initialize
9B DB E3                 |FINIT
DB E3                    |FNINIT1
FIST/FISTP—Store
DF /2                    |FIST m16int
DB /2                    |FIST m32int
DF /3                    |FISTP m16int
DB /3                    |FISTP m32int
DF /7                    |FISTP m64int
FISTTP—Store
DF /1                    |FISTTP m16int
DB /1                    |FISTTP m32int
DD /1                    |FISTTP m64int
FLD—Load
D9 /0                    |FLD m32fp
DD /0                    |FLD m64fp
DB /5                    |FLD m80fp
D9 C0+i                  |FLD ST(i)
FLD1/FLDL2T/FLDL2E/FLDPI/FLDLG2/FLDLN2/FLDZ—Load
D9 E8                    |FLD1
D9 E9                    |FLDL2T
D9 EA                    |FLDL2E
D9 EB                    |FLDPI
D9 EC                    |FLDLG2
D9 ED                    |FLDLN2
D9 EE                    |FLDZ
FLDCW—Load
D9 /5                    |FLDCW m2byte
FLDENV—Load
D9 /4                    |FLDENV m14/28byte
FMUL/FMULP/FIMUL—Multiply
D8 /1                    |FMUL m32fp
DC /1                    |FMUL m64fp
D8 C8+i                  |FMUL ST(0), ST(i)
DC C8+i                  |FMUL ST(i), ST(0)
DE C8+i                  |FMULP ST(i), ST(0)
DE C9                    |FMULP
DA /1                    |FIMUL m32int
DE /1                    |FIMUL m16int
FNOP—No
D9 D0                    |FNOP
FPATAN—Partial
D9 F3                    |FPATAN
FPREM—Partial
D9 F8                    |FPREM
FPREM1—Partial
D9 F5                    |FPREM1
FPTAN—Partial
D9 F2                    |FPTAN
FRNDINT—Round
D9 FC                    |FRNDINT
FRSTOR—Restore
DD /4                    |FRSTOR m94/108byte
FSAVE/FNSAVE—Store
9B DD /6                 |FSAVE m94/108byte
DD /6                    |FNSAVE1 m94/108byte
FSCALE—Scale
D9 FD                    |FSCALE
FSIN—Sine
D9 FE                    |FSIN
FSINCOS—Sine
D9 FB                    |FSINCOS
FSQRT—Square
D9 FA                    |FSQRT
FST/FSTP—Store
D9 /2                    |FST m32fp
DD /2                    |FST m64fp
DD D0+i                  |FST ST(i)
D9 /3                    |FSTP m32fp
DD /3                    |FSTP m64fp
DB /7                    |FSTP m80fp
DD D8+i                  |FSTP ST(i)
FSTCW/FNSTCW—Store
9B D9 /7                 |FSTCW m2byte
D9 /7                    |FNSTCW1 m2byte
FSTENV/FNSTENV—Store
9B D9 /6                 |FSTENV m14/28byte
D9 /6                    |FNSTENV1 m14/28byte
FSTSW/FNSTSW—Store
9B DD /7                 |FSTSW m2byte
9B DF E0                 |FSTSW AX
DD /7                    |FNSTSW1 m2byte
DF E0                    |FNSTSW1 AX
FSUB/FSUBP/FISUB—Subtract
D8 /4                    |FSUB m32fp
DC /4                    |FSUB m64fp
D8 E0+i                  |FSUB ST(0), ST(i)
DC E8+i                  |FSUB ST(i), ST(0)
DE E8+i                  |FSUBP ST(i), ST(0)
DE E9                    |FSUBP
DA /4                    |FISUB m32int
DE /4                    |FISUB m16int
FSUBR/FSUBRP/FISUBR—Reverse
D8 /5                    |FSUBR m32fp
DC /5                    |FSUBR m64fp
D8 E8+i                  |FSUBR ST(0), ST(i)
DC E0+i                  |FSUBR ST(i), ST(0)
DE E0+i                  |FSUBRP ST(i), ST(0)
DE E1                    |FSUBRP
DA /5                    |FISUBR m32int
DE /5                    |FISUBR m16int
FTST—TEST
D9 E4                    |FTST
FUCOM/FUCOMP/FUCOMPP—Unordered
DD E0+i                  |FUCOM ST(i)
DD E1                    |FUCOM
DD E8+i                  |FUCOMP ST(i)
DD E9                    |FUCOMP
DA E9                    |FUCOMPP
FXAM—Examine
D9 E5                    |FXAM
FXCH—Exchange
D9 C8+i                  |FXCH ST(i)
D9 C9                    |FXCH
FXRSTOR—Restore
NP 0F AE /1              |FXRSTOR m512byte
NP REX.W + 0F AE /1      |FXRSTOR64 m512byte
FXSAVE—Save
NP 0F AE /0              |FXSAVE m512byte
NP REX.W + 0F AE /0      |FXSAVE64 m512byte
FXTRACT—Extract
D9 F4                    |FXTRACT
FYL2X—Compute
D9 F1                    |FYL2X
FYL2XP1—Compute
D9 F9                    |FYL2XP1
HLT—Halt
F4                       |HLT
IDIV—Signed
F6 /7                    |IDIV r/m8
REX + F6 /7              |IDIV r/m8
F7 /7                    |IDIV r/m16
F7 /7                    |IDIV r/m32
REX.W + F7 /7            |IDIV r/m64
IMUL—Signed
F6 /5                    |IMUL r/m8
F7 /5                    |IMUL r/m16
F7 /5                    |IMUL r/m32
REX.W + F7 /5            |IMUL r/m64
0F AF /r                 |IMUL r16, r/m16
0F AF /r                 |IMUL r32, r/m32
REX.W + 0F AF /r         |IMUL r64, r/m64
6B /r ib                 |IMUL r16, r/m16, imm8
6B /r ib                 |IMUL r32, r/m32, imm8
REX.W + 6B /r ib         |IMUL r64, r/m64, imm8
69 /r iw                 |IMUL r16, r/m16, imm16
69 /r id                 |IMUL r32, r/m32, imm32
REX.W + 69 /r id         |IMUL r64, r/m64, imm32
IN—Input
E4 ib                    |IN AL, imm8
E5 ib                    |IN AX, imm8
E5 ib                    |IN EAX, imm8
EC                       |IN AL,DX
ED                       |IN AX,DX
ED                       |IN EAX,DX
INC—Increment
FE /0                    |INC r/m8
REX + FE /0              |INC r/m8
FF /0                    |INC r/m16
FF /0                    |INC r/m32
REX.W + FF /0            |INC r/m64
INS/INSB/INSW/INSD—Input
6C                       |INS m8, DX
6D                       |INS m16, DX
6D                       |INS m32, DX
6C                       |INSB
6D                       |INSW
6D                       |INSD
INVD—Invalidate
0F 08                    |INVD
INVLPG—Invalidate
0F 01/7                  |INVLPG m
IRET/IRETD/IRETQ—Interrupt
CF                       |IRET
CF                       |IRETD
REX.W + CF               |IRETQ
Jcc—Jump
77 cb                    |JA rel8
73 cb                    |JAE rel8
72 cb                    |JB rel8
76 cb                    |JBE rel8
72 cb                    |JC rel8
E3 cb                    |JECXZ rel8
E3 cb                    |JRCXZ rel8
74 cb                    |JE rel8
7F cb                    |JG rel8
7D cb                    |JGE rel8
7C cb                    |JL rel8
7E cb                    |JLE rel8
76 cb                    |JNA rel8
72 cb                    |JNAE rel8
73 cb                    |JNB rel8
77 cb                    |JNBE rel8
73 cb                    |JNC rel8
75 cb                    |JNE rel8
7E cb                    |JNG rel8
7C cb                    |JNGE rel8
7D cb                    |JNL rel8
7F cb                    |JNLE rel8
71 cb                    |JNO rel8
7B cb                    |JNP rel8
79 cb                    |JNS rel8
75 cb                    |JNZ rel8
70 cb                    |JO rel8
7A cb                    |JP rel8
7A cb                    |JPE rel8
7B cb                    |JPO rel8
78 cb                    |JS rel8
74 cb                    |JZ rel8
0F 87 cd                 |JA rel32
0F 83 cd                 |JAE rel32
Jcc—Jump
0F 82 cd                 |JB rel32
0F 86 cd                 |JBE rel32
0F 82 cd                 |JC rel32
0F 84 cd                 |JE rel32
0F 84 cd                 |JZ rel32
0F 8F cd                 |JG rel32
0F 8D cd                 |JGE rel32
0F 8C cd                 |JL rel32
0F 8E cd                 |JLE rel32
0F 86 cd                 |JNA rel32
0F 82 cd                 |JNAE rel32
0F 83 cd                 |JNB rel32
0F 87 cd                 |JNBE rel32
0F 83 cd                 |JNC rel32
Jcc—Jump
0F 85 cd                 |JNE rel32
0F 8E cd                 |JNG rel32
0F 8C cd                 |JNGE rel32
0F 8D cd                 |JNL rel32
0F 8F cd                 |JNLE rel32
0F 81 cd                 |JNO rel32
0F 8B cd                 |JNP rel32
0F 89 cd                 |JNS rel32
0F 85 cd                 |JNZ rel32
0F 80 cd                 |JO rel32
0F 8A cd                 |JP rel32
0F 8A cd                 |JPE rel32
0F 8B cd                 |JPO rel32
0F 88 cd                 |JS rel32
0F 84 cd                 |JZ rel32
JMP—Jump
EB cb                    |JMP rel8
E9 cd                    |JMP rel32
FF /4                    |JMP r/m64
FF /5                    |JMP m16:16
FF /5                    |JMP m16:32
REX.W FF /5              |JMP m16:64
LAR—Load
0F 02 /r                 |LAR r16, r16/m16
0F 02 /r                 |LAR reg, r32/m16
LDS/LES/LFS/LGS/LSS—Load
0F B2 /r                 |LSS r16,m16:16
0F B2 /r                 |LSS r32,m16:32
REX + 0F B2 /r           |LSS r64,m16:64
0F B4 /r                 |LFS r16,m16:16
0F B4 /r                 |LFS r32,m16:32
REX + 0F B4 /r           |LFS r64,m16:64
0F B5 /r                 |LGS r16,m16:16
0F B5 /r                 |LGS r32,m16:32
REX + 0F B5 /r           |LGS r64,m16:64
LEA—Load
8D /r                    |LEA r16,m
8D /r                    |LEA r32,m
REX.W + 8D /r            |LEA r64,m
LEAVE—High
C9                       |LEAVE
C9                       |LEAVE
LGDT/LIDT—Load
0F 01 /2                 |LGDT m16&64
0F 01 /3                 |LIDT m16&64
LLDT—Load
0F 00 /2                 |LLDT r/m16
LMSW—Load
0F 01 /6                 |LMSW r/m16
LOCK—Assert
F0                       |LOCK
LODS/LODSB/LODSW/LODSD/LODSQ—Load
AC                       |LODS m8
AD                       |LODS m16
AD                       |LODS m32
REX.W + AD               |LODS m64
AC                       |LODSB
AD                       |LODSW
AD                       |LODSD
REX.W + AD               |LODSQ
LOOP/LOOPcc—Loop
E2 cb                    |LOOP rel8
E1 cb                    |LOOPE rel8
E0 cb                    |LOOPNE rel8
LSL—Load
0F 03 /r                 |LSL r16, r16/m16
0F 03 /r                 |LSL r32, r32/m16
REX.W + 0F 03 /r         |LSL r64, r32/m16
LTR—Load
0F 00 /3                 |LTR r/m16
MASKMOVQ—Store
NP 0F F7 /r              |MASKMOVQ mm1, mm2
MONITOR—Set
0F 01 C8                 |MONITOR
MOV—Move
88 /r                    |MOV r/m8, r8
REX + 88 /r              |MOV r/m8, r8
89 /r                    |MOV r/m16, r16
89 /r                    |MOV r/m32, r32
REX.W + 89 /r            |MOV r/m64, r64
8A /r                    |MOV r8, r/m8
REX + 8A /r              |MOV r8, r/m8
8B /r                    |MOV r16, r/m16
8B /r                    |MOV r32, r/m32
REX.W + 8B /r            |MOV r64, r/m64
8C /r                    |MOV r/m16, Sreg
8C /r                    |MOV r16/r32/m16, Sreg
REX.W + 8C /r            |MOV r64/m16, Sreg
8E /r                    |MOV Sreg, r/m16
REX.W + 8E /r            |MOV Sreg, r/m64
A0                       |MOV AL, moffs8
REX.W + A0               |MOV AL, moffs8
A1                       |MOV AX, moffs16
A1                       |MOV EAX, moffs32
REX.W + A1               |MOV RAX, moffs64
A2                       |MOV moffs8, AL
REX.W + A2               |MOV moffs8, AL
A3                       |MOV moffs16, AX
A3                       |MOV moffs32, EAX
REX.W + A3               |MOV moffs64, RAX
B0+ rb ib                |MOV r8, imm8
REX + B0+ rb ib          |MOV r8, imm8
B8+ rw iw                |MOV r16, imm16
B8+ rd id                |MOV r32, imm32
REX.W + B8+ rd io        |MOV r64, imm64
C6 /0 ib                 |MOV r/m8, imm8
REX + C6 /0 ib           |MOV r/m8, imm8
C7 /0 iw                 |MOV r/m16, imm16
C7 /0 id                 |MOV r/m32, imm32
REX.W + C7 /0 id         |MOV r/m64, imm32
MOV—Move
0F 20/r                  |MOV r64, CR0–CR7
REX.R + 0F 20 /0         |MOV r64, CR8
0F 22 /r                 |MOV CR0–CR7, r64
REX.R + 0F 22 /0         |MOV CR8, r64
MOV—Move
0F 21/r                  |MOV r64, DR0–DR7
0F 23 /r                 |MOV DR0–DR7, r64
MOVDQ2Q—Move
F2 0F D6 /r              |MOVDQ2Q mm, xmm
MOVNTQ—Store
NP 0F E7 /r              |MOVNTQ m64, mm
MOVS/MOVSB/MOVSW/MOVSD/MOVSQ—Move
A4                       |MOVS m8, m8
A5                       |MOVS m16, m16
A5                       |MOVS m32, m32
REX.W + A5               |MOVS m64, m64
A4                       |MOVSB
A5                       |MOVSW
A5                       |MOVSD
REX.W + A5               |MOVSQ
MOVSX/MOVSXD—Move
0F BE /r                 |MOVSX r16, r/m8
0F BE /r                 |MOVSX r32, r/m8
REX.W + 0F BE /r         |MOVSX r64, r/m8
0F BF /r                 |MOVSX r32, r/m16
REX.W + 0F BF /r         |MOVSX r64, r/m16
63 /r                    |MOVSXD r16, r/m16
63 /r                    |MOVSXD r32, r/m32
REX.W + 63 /r            |MOVSXD r64, r/m32
MOVZX—Move
0F B6 /r                 |MOVZX r16, r/m8
0F B6 /r                 |MOVZX r32, r/m8
REX.W + 0F B6 /r         |MOVZX r64, r/m8
0F B7 /r                 |MOVZX r32, r/m16
REX.W + 0F B7 /r         |MOVZX r64, r/m16
MUL—Unsigned
F6 /4                    |MUL r/m8
REX + F6 /4              |MUL r/m8
F7 /4                    |MUL r/m16
F7 /4                    |MUL r/m32
REX.W + F7 /4            |MUL r/m64
MWAIT—Monitor
0F 01 C9                 |MWAIT
NEG—Two's
F6 /3                    |NEG r/m8
REX + F6 /3              |NEG r/m8
F7 /3                    |NEG r/m16
F7 /3                    |NEG r/m32
REX.W + F7 /3            |NEG r/m64
NOP—No
NP 90                    |NOP
NP 0F 1F /0              |NOP r/m16
NP 0F 1F /0              |NOP r/m32
NOT—One's
F6 /2                    |NOT r/m8
REX + F6 /2              |NOT r/m8
F7 /2                    |NOT r/m16
F7 /2                    |NOT r/m32
REX.W + F7 /2            |NOT r/m64
OR—Logical
0C ib                    |OR AL, imm8
0D iw                    |OR AX, imm16
0D id                    |OR EAX, imm32
REX.W + 0D id            |OR RAX, imm32
80 /1 ib                 |OR r/m8, imm8
REX + 80 /1 ib           |OR r/m8, imm8
81 /1 iw                 |OR r/m16, imm16
81 /1 id                 |OR r/m32, imm32
REX.W + 81 /1 id         |OR r/m64, imm32
83 /1 ib                 |OR r/m16, imm8
83 /1 ib                 |OR r/m32, imm8
REX.W + 83 /1 ib         |OR r/m64, imm8
08 /r                    |OR r/m8, r8
REX + 08 /r              |OR r/m8, r8
09 /r                    |OR r/m16, r16
09 /r                    |OR r/m32, r32
REX.W + 09 /r            |OR r/m64, r64
0A /r                    |OR r8, r/m8
REX + 0A /r              |OR r8, r/m8
0B /r                    |OR r16, r/m16
0B /r                    |OR r32, r/m32
REX.W + 0B /r            |OR r64, r/m64
OUT—Output
E6 ib                    |OUT imm8, AL
E7 ib                    |OUT imm8, AX
E7 ib                    |OUT imm8, EAX
EE                       |OUT DX, AL
EF                       |OUT DX, AX
EF                       |OUT DX, EAX
OUTS/OUTSB/OUTSW/OUTSD—Output
6E                       |OUTS DX, m8
6F                       |OUTS DX, m16
6F                       |OUTS DX, m32
6E                       |OUTSB
6F                       |OUTSW
6F                       |OUTSD
PAUSE—Spin
F3 90                    |PAUSE
POP—Pop
8F /0                    |POP r/m16
8F /0                    |POP r/m64
58+ rw                   |POP r16
58+ rd                   |POP r64
0F A1                    |POP FS
0F A1                    |POP FS
0F A9                    |POP GS
0F A9                    |POP GS
POPCNT—Return
F3 0F B8 /r              |POPCNT r16, r/m16
F3 0F B8 /r              |POPCNT r32, r/m32
F3 REX.W 0F B8 /r        |POPCNT r64, r/m64
POPF/POPFD/POPFQ—Pop
9D                       |POPF
9D                       |POPFQ
PREFETCHh—Prefetch
0F 18 /1                 |PREFETCHT0 m8
0F 18 /2                 |PREFETCHT1 m8
0F 18 /3                 |PREFETCHT2 m8
0F 18 /0                 |PREFETCHNTA m8
PSHUFW—Shuffle
NP 0F 70 /r ib           |PSHUFW mm1, mm2/m64, imm8
PUSH—Push
FF /6                    |PUSH r/m16
FF /6                    |PUSH r/m64
50+rw                    |PUSH r16
50+rd                    |PUSH r64
6A ib                    |PUSH imm8
68 iw                    |PUSH imm16
68 id                    |PUSH imm32
0F A0                    |PUSH FS
0F A8                    |PUSH GS
PUSHF/PUSHFD/PUSHFQ—Push
9C                       |PUSHF
9C                       |PUSHFQ
RCL/RCR/ROL/ROR—Rotate
D0 /2                    |RCL r/m8, 1
REX + D0 /2              |RCL r/m8, 1
D2 /2                    |RCL r/m8, CL
REX + D2 /2              |RCL r/m8, CL
C0 /2 ib                 |RCL r/m8, imm8
REX + C0 /2 ib           |RCL r/m8, imm8
D1 /2                    |RCL r/m16, 1
D3 /2                    |RCL r/m16, CL
C1 /2 ib                 |RCL r/m16, imm8
D1 /2                    |RCL r/m32, 1
REX.W + D1 /2            |RCL r/m64, 1
D3 /2                    |RCL r/m32, CL
REX.W + D3 /2            |RCL r/m64, CL
C1 /2 ib                 |RCL r/m32, imm8
REX.W + C1 /2 ib         |RCL r/m64, imm8
D0 /3                    |RCR r/m8, 1
REX + D0 /3              |RCR r/m8, 1
D2 /3                    |RCR r/m8, CL
REX + D2 /3              |RCR r/m8, CL
C0 /3 ib                 |RCR r/m8, imm8
REX + C0 /3 ib           |RCR r/m8, imm8
D1 /3                    |RCR r/m16, 1
D3 /3                    |RCR r/m16, CL
C1 /3 ib                 |RCR r/m16, imm8
D1 /3                    |RCR r/m32, 1
REX.W + D1 /3            |RCR r/m64, 1
D3 /3                    |RCR r/m32, CL
REX.W + D3 /3            |RCR r/m64, CL
C1 /3 ib                 |RCR r/m32, imm8
REX.W + C1 /3 ib         |RCR r/m64, imm8
D0 /0                    |ROL r/m8, 1
REX + D0 /0              |ROL r/m8, 1
D2 /0                    |ROL r/m8, CL
REX + D2 /0              |ROL r/m8, CL
C0 /0 ib                 |ROL r/m8, imm8
RCL/RCR/ROL/ROR—Rotate
REX + C0 /0 ib           |ROL r/m8, imm8
D1 /0                    |ROL r/m16, 1
D3 /0                    |ROL r/m16, CL
C1 /0 ib                 |ROL r/m16, imm8
D1 /0                    |ROL r/m32, 1
REX.W + D1 /0            |ROL r/m64, 1
D3 /0                    |ROL r/m32, CL
REX.W + D3 /0            |ROL r/m64, CL
C1 /0 ib                 |ROL r/m32, imm8
REX.W + C1 /0 ib         |ROL r/m64, imm8
D0 /1                    |ROR r/m8, 1
REX + D0 /1              |ROR r/m8, 1
D2 /1                    |ROR r/m8, CL
REX + D2 /1              |ROR r/m8, CL
C0 /1 ib                 |ROR r/m8, imm8
REX + C0 /1 ib           |ROR r/m8, imm8
D1 /1                    |ROR r/m16, 1
D3 /1                    |ROR r/m16, CL
C1 /1 ib                 |ROR r/m16, imm8
D1 /1                    |ROR r/m32, 1
REX.W + D1 /1            |ROR r/m64, 1
D3 /1                    |ROR r/m32, CL
REX.W + D3 /1            |ROR r/m64, CL
C1 /1 ib                 |ROR r/m32, imm8
REX.W + C1 /1 ib         |ROR r/m64, imm8
RDMSR—Read
0F 32                    |RDMSR
RDPKRU—Read
NP 0F 01 EE              |RDPKRU
RDPMC—Read
0F 33                    |RDPMC
RDTSC—Read
0F 31                    |RDTSC
RDTSCP—Read
0F 01 F9                 |RDTSCP
REP/REPE/REPZ/REPNE/REPNZ—Repeat
F3 6C                    |REP INS m8, DX
F3 6C                    |REP INS m8, DX
F3 6D                    |REP INS m16, DX
F3 6D                    |REP INS m32, DX
F3 6D                    |REP INS r/m32, DX
F3 A4                    |REP MOVS m8, m8
F3 REX.W A4              |REP MOVS m8, m8
F3 A5                    |REP MOVS m16, m16
F3 A5                    |REP MOVS m32, m32
F3 REX.W A5              |REP MOVS m64, m64
F3 6E                    |REP OUTS DX, r/m8
F3 REX.W 6E              |REP OUTS DX, r/m8
F3 6F                    |REP OUTS DX, r/m16
F3 6F                    |REP OUTS DX, r/m32
F3 REX.W 6F              |REP OUTS DX, r/m32
F3 AC                    |REP LODS AL
F3 REX.W AC              |REP LODS AL
F3 AD                    |REP LODS AX
F3 AD                    |REP LODS EAX
F3 REX.W AD              |REP LODS RAX
F3 AA                    |REP STOS m8
F3 REX.W AA              |REP STOS m8
F3 AB                    |REP STOS m16
F3 AB                    |REP STOS m32
F3 REX.W AB              |REP STOS m64
F3 A6                    |REPE CMPS m8, m8
F3 REX.W A6              |REPE CMPS m8, m8
F3 A7                    |REPE CMPS m16, m16
F3 A7                    |REPE CMPS m32, m32
F3 REX.W A7              |REPE CMPS m64, m64
F3 AE                    |REPE SCAS m8
F3 REX.W AE              |REPE SCAS m8
F3 AF                    |REPE SCAS m16
F3 AF                    |REPE SCAS m32
REP/REPE/REPZ/REPNE/REPNZ—Repeat
F3 REX.W AF              |REPE SCAS m64
F2 A6                    |REPNE CMPS m8, m8
F2 REX.W A6              |REPNE CMPS m8, m8
F2 A7                    |REPNE CMPS m16, m16
F2 A7                    |REPNE CMPS m32, m32
F2 REX.W A7              |REPNE CMPS m64, m64
F2 AE                    |REPNE SCAS m8
F2 REX.W AE              |REPNE SCAS m8
F2 AF                    |REPNE SCAS m16
F2 AF                    |REPNE SCAS m32
F2 REX.W AF              |REPNE SCAS m64
RET—Return
C3                       |RET
CB                       |RET
C2 iw                    |RET imm16
CA iw                    |RET imm16
RSM—Resume
0F AA                    |RSM
SAL/SAR/SHL/SHR—Shift
D0 /4                    |SAL r/m8, 1
REX + D0 /4              |SAL r/m8, 1
D2 /4                    |SAL r/m8, CL
REX + D2 /4              |SAL r/m8, CL
C0 /4 ib                 |SAL r/m8, imm8
REX + C0 /4 ib           |SAL r/m8, imm8
D1 /4                    |SAL r/m16, 1
D3 /4                    |SAL r/m16, CL
C1 /4 ib                 |SAL r/m16, imm8
D1 /4                    |SAL r/m32, 1
REX.W + D1 /4            |SAL r/m64, 1
D3 /4                    |SAL r/m32, CL
REX.W + D3 /4            |SAL r/m64, CL
C1 /4 ib                 |SAL r/m32, imm8
REX.W + C1 /4 ib         |SAL r/m64, imm8
D0 /7                    |SAR r/m8, 1
REX + D0 /7              |SAR r/m8, 1
D2 /7                    |SAR r/m8, CL
REX + D2 /7              |SAR r/m8, CL
C0 /7 ib                 |SAR r/m8, imm8
REX + C0 /7 ib           |SAR r/m8, imm8
D1 /7                    |SAR r/m16,1
D3 /7                    |SAR r/m16, CL
C1 /7 ib                 |SAR r/m16, imm8
D1 /7                    |SAR r/m32, 1
REX.W + D1 /7            |SAR r/m64, 1
D3 /7                    |SAR r/m32, CL
REX.W + D3 /7            |SAR r/m64, CL
C1 /7 ib                 |SAR r/m32, imm8
REX.W + C1 /7 ib         |SAR r/m64, imm8
D0 /4                    |SHL r/m8, 1
REX + D0 /4              |SHL r/m8, 1
D2 /4                    |SHL r/m8, CL
REX + D2 /4              |SHL r/m8, CL
C0 /4 ib                 |SHL r/m8, imm8
REX + C0 /4 ib           |SHL r/m8, imm8
D1 /4                    |SHL r/m16,1
D3 /4                    |SHL r/m16, CL
C1 /4 ib                 |SHL r/m16, imm8
D1 /4                    |SHL r/m32,1
SAL/SAR/SHL/SHR—Shift
REX.W + D1 /4            |SHL r/m64,1
D3 /4                    |SHL r/m32, CL
REX.W + D3 /4            |SHL r/m64, CL
C1 /4 ib                 |SHL r/m32, imm8
REX.W + C1 /4 ib         |SHL r/m64, imm8
D0 /5                    |SHR r/m8,1
REX + D0 /5              |SHR r/m8, 1
D2 /5                    |SHR r/m8, CL
REX + D2 /5              |SHR r/m8, CL
C0 /5 ib                 |SHR r/m8, imm8
REX + C0 /5 ib           |SHR r/m8, imm8
D1 /5                    |SHR r/m16, 1
D3 /5                    |SHR r/m16, CL
C1 /5 ib                 |SHR r/m16, imm8
D1 /5                    |SHR r/m32, 1
REX.W + D1 /5            |SHR r/m64, 1
D3 /5                    |SHR r/m32, CL
REX.W + D3 /5            |SHR r/m64, CL
C1 /5 ib                 |SHR r/m32, imm8
REX.W + C1 /5 ib         |SHR r/m64, imm8
SBB—Integer
1C ib                    |SBB AL, imm8
1D iw                    |SBB AX, imm16
1D id                    |SBB EAX, imm32
REX.W + 1D id            |SBB RAX, imm32
80 /3 ib                 |SBB r/m8, imm8
REX + 80 /3 ib           |SBB r/m8, imm8
81 /3 iw                 |SBB r/m16, imm16
81 /3 id                 |SBB r/m32, imm32
REX.W + 81 /3 id         |SBB r/m64, imm32
83 /3 ib                 |SBB r/m16, imm8
83 /3 ib                 |SBB r/m32, imm8
REX.W + 83 /3 ib         |SBB r/m64, imm8
18 /r                    |SBB r/m8, r8
REX + 18 /r              |SBB r/m8, r8
19 /r                    |SBB r/m16, r16
19 /r                    |SBB r/m32, r32
REX.W + 19 /r            |SBB r/m64, r64
1A /r                    |SBB r8, r/m8
REX + 1A /r              |SBB r8, r/m8
1B /r                    |SBB r16, r/m16
1B /r                    |SBB r32, r/m32
REX.W + 1B /r            |SBB r64, r/m64
SCAS/SCASB/SCASW/SCASD—Scan
AE                       |SCAS m8
AF                       |SCAS m16
AF                       |SCAS m32
REX.W + AF               |SCAS m64
AE                       |SCASB
AF                       |SCASW
AF                       |SCASD
REX.W + AF               |SCASQ
SETcc—Set
0F 97                    |SETA r/m8
REX + 0F 97              |SETA r/m8
0F 93                    |SETAE r/m8
REX + 0F 93              |SETAE r/m8
0F 92                    |SETB r/m8
REX + 0F 92              |SETB r/m8
0F 96                    |SETBE r/m8
REX + 0F 96              |SETBE r/m8
0F 92                    |SETC r/m8
REX + 0F 92              |SETC r/m8
0F 94                    |SETE r/m8
REX + 0F 94              |SETE r/m8
0F 9F                    |SETG r/m8
REX + 0F 9F              |SETG r/m8
0F 9D                    |SETGE r/m8
REX + 0F 9D              |SETGE r/m8
0F 9C                    |SETL r/m8
REX + 0F 9C              |SETL r/m8
0F 9E                    |SETLE r/m8
REX + 0F 9E              |SETLE r/m8
0F 96                    |SETNA r/m8
REX + 0F 96              |SETNA r/m8
0F 92                    |SETNAE r/m8
REX + 0F 92              |SETNAE r/m8
0F 93                    |SETNB r/m8
REX + 0F 93              |SETNB r/m8
0F 97                    |SETNBE r/m8
REX + 0F 97              |SETNBE r/m8
0F 93                    |SETNC r/m8
REX + 0F 93              |SETNC r/m8
0F 95                    |SETNE r/m8
REX + 0F 95              |SETNE r/m8
0F 9E                    |SETNG r/m8
REX + 0F 9E              |SETNG r/m8
0F 9C                    |SETNGE r/m8
REX + 0F 9C              |SETNGE r/m8
0F 9D                    |SETNL r/m8
REX + 0F 9D              |SETNL r/m8
0F 9F                    |SETNLE r/m8
REX + 0F 9F              |SETNLE r/m8
SETcc—Set
0F 91                    |SETNO r/m8
REX + 0F 91              |SETNO r/m8
0F 9B                    |SETNP r/m8
REX + 0F 9B              |SETNP r/m8
0F 99                    |SETNS r/m8
REX + 0F 99              |SETNS r/m8
0F 95                    |SETNZ r/m8
REX + 0F 95              |SETNZ r/m8
0F 90                    |SETO r/m8
REX + 0F 90              |SETO r/m8
0F 9A                    |SETP r/m8
REX + 0F 9A              |SETP r/m8
0F 9A                    |SETPE r/m8
REX + 0F 9A              |SETPE r/m8
0F 9B                    |SETPO r/m8
REX + 0F 9B              |SETPO r/m8
0F 98                    |SETS r/m8
REX + 0F 98              |SETS r/m8
0F 94                    |SETZ r/m8
REX + 0F 94              |SETZ r/m8
SFENCE—Store
NP 0F AE F8              |SFENCE
SGDT—Store
0F 01 /0                 |SGDT m
SHLD—Double
0F A4 /r ib              |SHLD r/m16, r16, imm8
0F A5 /r                 |SHLD r/m16, r16, CL
0F A4 /r ib              |SHLD r/m32, r32, imm8
REX.W + 0F A4 /r ib      |SHLD r/m64, r64, imm8
0F A5 /r                 |SHLD r/m32, r32, CL
REX.W + 0F A5 /r         |SHLD r/m64, r64, CL
SHRD—Double
0F AC /r ib              |SHRD r/m16, r16, imm8
0F AD /r                 |SHRD r/m16, r16, CL
0F AC /r ib              |SHRD r/m32, r32, imm8
REX.W + 0F AC /r ib      |SHRD r/m64, r64, imm8
0F AD /r                 |SHRD r/m32, r32, CL
REX.W + 0F AD /r         |SHRD r/m64, r64, CL
SIDT—Store
0F 01 /1                 |SIDT m
SLDT—Store
0F 00 /0                 |SLDT r/m16
SMSW—Store
0F 01 /4                 |SMSW r/m16
0F 01 /4                 |SMSW r32/m16
REX.W + 0F 01 /4         |SMSW r64/m16
STC—Set
F9                       |STC
STD—Set
FD                       |STD
STI—Set
FB                       |STI
STOS/STOSB/STOSW/STOSD/STOSQ—Store
AA                       |STOS m8
AB                       |STOS m16
AB                       |STOS m32
REX.W + AB               |STOS m64
AA                       |STOSB
AB                       |STOSW
AB                       |STOSD
REX.W + AB               |STOSQ
STR—Store
0F 00 /1                 |STR r/m16
SUB—Subtract
2C ib                    |SUB AL, imm8
2D iw                    |SUB AX, imm16
2D id                    |SUB EAX, imm32
REX.W + 2D id            |SUB RAX, imm32
80 /5 ib                 |SUB r/m8, imm8
REX + 80 /5 ib           |SUB r/m8, imm8
81 /5 iw                 |SUB r/m16, imm16
81 /5 id                 |SUB r/m32, imm32
REX.W + 81 /5 id         |SUB r/m64, imm32
83 /5 ib                 |SUB r/m16, imm8
83 /5 ib                 |SUB r/m32, imm8
REX.W + 83 /5 ib         |SUB r/m64, imm8
28 /r                    |SUB r/m8, r8
REX + 28 /r              |SUB r/m8, r8
29 /r                    |SUB r/m16, r16
29 /r                    |SUB r/m32, r32
REX.W + 29 /r            |SUB r/m64, r64
2A /r                    |SUB r8, r/m8
REX + 2A /r              |SUB r8, r/m8
2B /r                    |SUB r16, r/m16
2B /r                    |SUB r32, r/m32
REX.W + 2B /r            |SUB r64, r/m64
SWAPGS—Swap
0F 01 F8                 |SWAPGS
SYSCALL—Fast
0F 05                    |SYSCALL
SYSENTER—Fast
0F 34                    |SYSENTER
SYSEXIT—Fast
0F 35                    |SYSEXIT
REX.W + 0F 35            |SYSEXIT
SYSRET—Return
0F 07                    |SYSRET
REX.W + 0F 07            |SYSRET
TEST—Logical
A8 ib                    |TEST AL, imm8
A9 iw                    |TEST AX, imm16
A9 id                    |TEST EAX, imm32
REX.W + A9 id            |TEST RAX, imm32
F6 /0 ib                 |TEST r/m8, imm8
REX + F6 /0 ib           |TEST r/m8, imm8
F7 /0 iw                 |TEST r/m16, imm16
F7 /0 id                 |TEST r/m32, imm32
REX.W + F7 /0 id         |TEST r/m64, imm32
84 /r                    |TEST r/m8, r8
REX + 84 /r              |TEST r/m8, r8
85 /r                    |TEST r/m16, r16
85 /r                    |TEST r/m32, r32
REX.W + 85 /r            |TEST r/m64, r64
UD—Undefined
0F FF /r                 |UD01 r32, r/m32
0F B9 /r                 |UD1 r32, r/m32
0F 0B                    |UD2
VERR/VERW—Verify
0F 00 /4                 |VERR r/m16
0F 00 /5                 |VERW r/m16
WAIT/FWAIT—Wait
9B                       |WAIT
9B                       |FWAIT
WBINVD—Write
0F 09                    |WBINVD
WRMSR—Write
0F 30                    |WRMSR
XADD—Exchange
0F C0 /r                 |XADD r/m8, r8
REX + 0F C0 /r           |XADD r/m8, r8
0F C1 /r                 |XADD r/m16, r16
0F C1 /r                 |XADD r/m32, r32
REX.W + 0F C1 /r         |XADD r/m64, r64
XCHG—Exchange
90+rw                    |XCHG AX, r16
90+rw                    |XCHG r16, AX
90+rd                    |XCHG EAX, r32
REX.W + 90+rd            |XCHG RAX, r64
90+rd                    |XCHG r32, EAX
REX.W + 90+rd            |XCHG r64, RAX
86 /r                    |XCHG r/m8, r8
REX + 86 /r              |XCHG r/m8, r8
86 /r                    |XCHG r8, r/m8
REX + 86 /r              |XCHG r8, r/m8
87 /r                    |XCHG r/m16, r16
87 /r                    |XCHG r16, r/m16
87 /r                    |XCHG r/m32, r32
REX.W + 87 /r            |XCHG r/m64, r64
87 /r                    |XCHG r32, r/m32
REX.W + 87 /r            |XCHG r64, r/m64
XGETBV—Get
NP 0F 01 D0              |XGETBV
XLAT/XLATB—Table
D7                       |XLAT m8
D7                       |XLATB
REX.W + D7               |XLATB
XOR—Logical
34 ib                    |XOR AL, imm8
35 iw                    |XOR AX, imm16
35 id                    |XOR EAX, imm32
REX.W + 35 id            |XOR RAX, imm32
80 /6 ib                 |XOR r/m8, imm8
REX + 80 /6 ib           |XOR r/m8, imm8
81 /6 iw                 |XOR r/m16, imm16
81 /6 id                 |XOR r/m32, imm32
REX.W + 81 /6 id         |XOR r/m64, imm32
83 /6 ib                 |XOR r/m16, imm8
83 /6 ib                 |XOR r/m32, imm8
REX.W + 83 /6 ib         |XOR r/m64, imm8
30 /r                    |XOR r/m8, r8
REX + 30 /r              |XOR r/m8, r8
31 /r                    |XOR r/m16, r16
31 /r                    |XOR r/m32, r32
REX.W + 31 /r            |XOR r/m64, r64
32 /r                    |XOR r8, r/m8
REX + 32 /r              |XOR r8, r/m8
33 /r                    |XOR r16, r/m16
33 /r                    |XOR r32, r/m32
REX.W + 33 /r            |XOR r64, r/m64
XSETBV—Set
NP 0F 01 D1              |XSETBV
